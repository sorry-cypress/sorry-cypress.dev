{"version":3,"sources":["webpack:///../src/director/execution.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"0PAMaA,G,UAAe,S,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,aADR,aAGA,oHACA,2EACA,gHACA,kBACE,GAAM,sBADR,sBAGA,0FACE,iBACE,KAAQ,OACR,WAAc,KAFhB,eADF,6DAME,iBACE,KAAQ,aACR,WAAc,KAFhB,aANF,KAWA,8EACA,uBAAK,oBACD,WAAc,OADb,yHAML,6EACE,0BACE,WAAc,KADhB,OADF,QAKE,0BACE,WAAc,KADhB,aALF,mD,0MAaJH,EAAWI,gBAAiB","file":"component---src-director-execution-mdx-ee765d12fd0a4cc81b36.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/sorry-cypress.dev/sorry-cypress.dev/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"in-memory\"\n    }}>{`In-memory`}</h2>\n    <p>{`Keeps the state of runs in-memory. That means that restarting the service wipes everything.`}</p>\n    <p>{`That's the simplest and most naive implementation.`}</p>\n    <p>{`If you just want to run the tests in parallel and not worry about storing test results.`}</p>\n    <h2 {...{\n      \"id\": \"persisting-mongodb\"\n    }}>{`Persisting MongoDB`}</h2>\n    <p>{`The state - test runs and results - are persisted in MongoDB. The `}\n      <a {...{\n        \"href\": \"/api\",\n        \"parentName\": \"p\"\n      }}>{`API service`}</a>\n      {` queries MongoDB the retreive test run details when using `}\n      <a {...{\n        \"href\": \"/dashboard\",\n        \"parentName\": \"p\"\n      }}>{`Dashboard`}</a>\n      {`.`}</p>\n    <p>{`To enable this driver, set the envrionment variables:`}</p>\n    <pre><code {...{\n        \"parentName\": \"pre\"\n      }}>{`EXECUTION_DRIVER=\"../execution/mongo/driver\"\nMONGODB_URI=\"monodgb://your-DB-URI\"\nMONGODB_DATABASE=\"your-DB-name\"\n`}</code></pre>\n    <p>{`With MongoDB driver you can use the other services - `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`api`}</inlineCode>\n      {` and `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`dashboard`}</inlineCode>\n      {` to browse the results of your test runs.`}</p>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}