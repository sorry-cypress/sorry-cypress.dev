{"version":3,"sources":["webpack:///../src/dashboard.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","src","alt","width","isMDXComponent"],"mappings":"uPAMaA,G,UAAe,S,mMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,2DACE,iBACE,KAAQ,OACR,WAAc,KAFhB,eADF,+GAMA,+BACE,iBACE,KAAQ,oBACR,WAAc,KAFhB,kBADF,mFAMA,gEACE,iBACE,KAAQ,4CACR,WAAc,KAFhB,6CADF,KAMA,kBACE,GAAM,iBADR,iBAGA,kBACE,GAAM,sBADR,sBAGA,qDACE,0BACE,WAAc,KADhB,sBADF,oBAKE,iBACE,KAAQ,OACR,WAAc,KAFhB,eALF,+EAWA,uBAAK,oBACD,UAAa,cACb,WAAc,OAFb,wEAKL,kBACE,GAAM,UADR,UAGA,0DACE,0BACE,WAAc,KADhB,UADF,mCAKA,uBAAK,oBACD,UAAa,cACb,WAAc,OAFb,qFAKL,+BACA,sBAEE,kBACE,WAAc,MACb,0BACC,WAAc,MADf,aAFH,mCAME,0BACE,WAAc,MADhB,aANF,KAUE,0BACE,WAAc,MADhB,YAVF,KAcE,0BACE,WAAc,MADhB,aAdF,KAoBA,kBACE,WAAc,MACb,0BACC,WAAc,MADf,gBAFH,iFAQA,kBACE,WAAc,MACb,0BACC,WAAc,MADf,cAFH,qDAME,0BACE,WAAc,MADhB,iBANF,+CAYF,mBAAKC,IAAI,qBAAqBC,IAAI,SAASC,MAAM,QACjD,kBACE,GAAM,uBADR,uBAGA,uBAAK,oBACD,UAAa,cACb,WAAc,OAFb,qI,iMAiBTN,EAAWO,gBAAiB","file":"component---src-dashboard-mdx-05ebed3d71a8e5ca7d68.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/sorry-cypress.dev/sorry-cypress.dev/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`The ReactJS web dashboard uses the `}\n      <a {...{\n        \"href\": \"/api\",\n        \"parentName\": \"p\"\n      }}>{`API service`}</a>\n      {` to display the test results and currently running tests. You can browse test details and failure messages.`}</p>\n    <p>{`When a `}\n      <a {...{\n        \"href\": \"/director/storage\",\n        \"parentName\": \"p\"\n      }}>{`Storage driver`}</a>\n      {` is configured, you can also see screenshots and video recordings (if enabled).`}</p>\n    <p>{`You can explore an example dashboard at `}\n      <a {...{\n        \"href\": \"https://sorry-cypress-demo.herokuapp.com/\",\n        \"parentName\": \"p\"\n      }}>{`https://sorry-cypress-demo.herokuapp.com/`}</a>\n      {`.`}</p>\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <h3 {...{\n      \"id\": \"graphql_schema_url\"\n    }}>{`GRAPHQL_SCHEMA_URL`}</h3>\n    <p>{`Set the environment variable `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`GRAPHQL_SCHEMA_URL`}</inlineCode>\n      {` with the URL of `}\n      <a {...{\n        \"href\": \"/api\",\n        \"parentName\": \"p\"\n      }}>{`API service`}</a>\n      {`.\nGraphQL client will use it to pull schema definitions and issue queries.`}</p>\n    <pre><code {...{\n        \"className\": \"language-sh\",\n        \"parentName\": \"pre\"\n      }}>{`GRAPHQL_SCHEMA_URL='https://sorry-cypress-demo-api.herokuapp.com'\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"ci_url\"\n    }}>{`CI_URL`}</h3>\n    <p>{`Set optional environment variable `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`CI_URL`}</inlineCode>\n      {` to add a link to your CI tool.`}</p>\n    <pre><code {...{\n        \"className\": \"language-sh\",\n        \"parentName\": \"pre\"\n      }}>{`CI_URL=Link name,https://your.ci.service/project/{project_id}/build/{build_id}\n`}</code></pre>\n    <p>{`Where:`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`Link name`}</inlineCode>\n        {` is the link name, for example: `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`Travis CI`}</inlineCode>\n        {`, `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`Drone CI`}</inlineCode>\n        {`, `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`Circle CI`}</inlineCode>\n        {`.`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`{project_id}`}</inlineCode>\n        {` is a templating tag for cypress project name - will be injected dynamically.`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}><inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`{build_id}`}</inlineCode>\n        {` is a templating tag for ID passed to cypress via `}\n        <inlineCode {...{\n          \"parentName\": \"li\"\n        }}>{`--ci-build-id`}</inlineCode>\n        {` parameter - will be injected dynamically.`}</li>\n\n    </ul>\n    <img src=\"/public/CI_URL.png\" alt=\"CI_URL\" width=\"400\" />\n    <h2 {...{\n      \"id\": \"running-the-service\"\n    }}>{`Running the service`}</h2>\n    <pre><code {...{\n        \"className\": \"language-sh\",\n        \"parentName\": \"pre\"\n      }}>{`$ cd packages/dashboard\n\n$ npm install\n$ npm run build\n...\n$ npm run start\n\n$ node ./server\nListening on 8080...\n`}</code></pre>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}