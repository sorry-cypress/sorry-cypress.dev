{"version":3,"sources":["webpack:///../src/director/index.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","isMDXComponent"],"mappings":"0PAMaA,G,UAAe,S,wMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,kBACE,GAAM,YADR,YAGA,4BACE,0BACE,WAAc,KADhB,YADF,gCAKA,sBAEE,kBACE,WAAc,MADhB,iDAKA,kBACE,WAAc,MADhB,wBAKA,kBACE,WAAc,MADhB,oCAKF,mKACA,kHACA,kBACE,GAAM,wBADR,wBAGA,uBAAK,oBACD,UAAa,cACb,WAAc,OAFb,mMAeL,iEACE,0BACE,WAAc,KADhB,QADF,SAKE,0BACE,WAAc,KADhB,aALF,yBASE,0BACE,WAAc,KADhB,SATF,oBAaA,kBACE,GAAM,WADR,WAGA,4BACE,0BACE,WAAc,KADhB,YADF,+NAKA,kBACE,GAAM,iBADR,iBAGA,yCACE,iBACE,KAAQ,uCACR,WAAc,KACb,0BACC,WAAc,KADf,WAJL,yDAQE,0BACE,WAAc,KADhB,QARF,qEAYA,uBAAK,oBACD,UAAa,cACb,WAAc,OAFb,idAsBL,gCACE,0BACE,WAAc,KADhB,gBADF,4GAKE,0BACE,WAAc,KADhB,SALF,sCASE,0BACE,WAAc,KADhB,YATF,qGAaE,0BACE,WAAc,KADhB,YAbF,qBAiBA,qG,sMAKJH,EAAWI,gBAAiB","file":"component---src-director-index-mdx-909186fa4bc6f1470981.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/sorry-cypress.dev/sorry-cypress.dev/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h2>\n    <p>{`The `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`director`}</inlineCode>\n      {` service is responsible for:`}</p>\n    <ul>\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`paralellization and coordination of test runs`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`saving tests results`}</li>\n\n\n      <li {...{\n        \"parentName\": \"ul\"\n      }}>{`saving failed tests screenshots`}</li>\n\n    </ul>\n    <p>{`When you launch Cypress on a CI environment with multiple machines, each machine first contacts the dashboard to get the next test to run.`}</p>\n    <p>{`The dashboard coordinates the requests from different machines and assigns tests to each.`}</p>\n    <h2 {...{\n      \"id\": \"starting-the-service\"\n    }}>{`Starting the service`}</h2>\n    <pre><code {...{\n        \"className\": \"language-sh\",\n        \"parentName\": \"pre\"\n      }}>{`cd packages/director\n\nnpm install\nnpm run build\nnpm run start\n\n# ...\n\nInitializing \"in-memory\" execution driver...\nInitializing \"dummy\" screenshots driver...\nListening on 1234...\n`}</code></pre>\n    <p>{`By default, the service will run on port `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`1234`}</inlineCode>\n      {` with `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`in-memory`}</inlineCode>\n      {` execution driver and `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`dummy`}</inlineCode>\n      {` storage driver.`}</p>\n    <h2 {...{\n      \"id\": \"drivers\"\n    }}>{`Drivers`}</h2>\n    <p>{`The `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`director`}</inlineCode>\n      {` uses \"drivers\" that define different aspects of its functionality. You can choose or implement different type of drivers to support the desired functionality. There're several community-supported drivers listed below.`}</p>\n    <h2 {...{\n      \"id\": \"configuration\"\n    }}>{`Configuration`}</h2>\n    <p>{`The service uses `}\n      <a {...{\n        \"href\": \"https://www.npmjs.com/package/dotenv\",\n        \"parentName\": \"p\"\n      }}><inlineCode {...{\n          \"parentName\": \"a\"\n        }}>{`dotenv`}</inlineCode></a>\n      {` package. To change the default configuration, create `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`.env`}</inlineCode>\n      {` file in service's root to set the default environment variables:`}</p>\n    <pre><code {...{\n        \"className\": \"language-sh\",\n        \"parentName\": \"pre\"\n      }}>{`$ pwd\n/Users/agoldis/sorry-cypress/packages/director\n\n$ cat .env\n\nPORT=1234\n\n# DASHBOARD_URL is what Cypress client shows as a \"Run URL\"\nDASHBOARD_URL=\"https://sorry-cypress.herokuapp.com\"\n\n# Path the the execution driver\nEXECUTION_DRIVER=\"../execution/in-memory\"\n\n# Path the the storage driver\nSCREENSHOTS_DRIVER=\"../screenshots/dummy.driver\"\n\n# Read more about record keys whitelist below\nALLOWED_KEYS=\"my_secret_key,my_another_secret_key\"\n`}</code></pre>\n    <p>{`Setting `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`ALLOWED_KEYS`}</inlineCode>\n      {` variable allows you to define list of comma delimited record keys (provided to the Cypress Runner using `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`--key`}</inlineCode>\n      {` option) which are accepted by the `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`director`}</inlineCode>\n      {` service. This can be useful when Cypress is running on external CI servers and we need to expose `}\n      <inlineCode {...{\n        \"parentName\": \"p\"\n      }}>{`director`}</inlineCode>\n      {` to the internet.`}</p>\n    <p>{`Empty or not provided variable means that all record keys are allowed.`}</p>\n\n  </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}